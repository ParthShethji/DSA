#include <bits/stdc++.h>
using namespace std;

class Node {
    public:
        int data;
        Node* next;
        Node* prev;
};

class DoublyLinkedList {
    private:
        Node* head;
    public:
    DoublyLinkedList() {
        head = NULL;
    }

    void enqueue(int value) {
        Node* newNode = new Node();
        newNode->data = value;
        newNode->next = NULL;
        newNode->prev = NULL;

        if (head == NULL) {
            head = newNode;
        } else {
            Node* temp = head;
            while (temp->next != NULL) {
                temp = temp->next;
            }
            temp->next = newNode;
            newNode->prev = temp;
        }
    }

    void dequeue() {
        if (head == NULL) {
            cout << "The list is empty" << endl;
            return;
        }

        Node* temp = head;
        if (head->next == NULL) {
            head = NULL;
        } else {
            head = head->next;
            head->prev = NULL;
        }
        delete temp;
    }

    void display() {
        Node* temp = head;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    DoublyLinkedList list;
    int choice, value;

    do {
        cout << "\n1. Enqueue 2. Dequeue 3. Display 4. Exit \n";
        cout << "Select: "; 
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter a value: ";
                cin >> value;
                list.enqueue(value);
                break;
            case 2:
                list.dequeue();
                break;
            case 3:
                list.display();
                break;
            case 4:
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice" << endl;
                break;
        }
    } while (choice != 4);

    return 0;
}
