#include <iostream>
using namespace std;

int min(int x, int y) { return (x <= y) ? x : y; }

int fibonacciSearch(int arr[], int x, int n)
{
    if (n == 0)
        return -1;

    int fib2 = 0;  
    int fib1 = 1;  
    int fib = fib2 + fib1;  

    while (fib < n)
    {
        fib2 = fib1;
        fib1 = fib;
        fib = fib2 + fib1;
    }

    int offset = -1;  

    while (fib > 1)
    {
        int i = min(offset + fib2, n - 1);

        if (arr[i] < x)
        {
            fib = fib1;
            fib1 = fib2;
            fib2 = fib - fib1;
            offset = i;
        }
        else if (arr[i] > x)
        {
            fib = fib2;
            fib1 = fib1 - fib2;
            fib2 = fib - fib1;
        }
        else
            return i;
    }

    if (fib1 && arr[offset + 1] == x)
        return offset + 1;

    return -1;
}

int main()
{
    int arr[] = { 10, 22, 35, 40, 45, 50, 80, 82, 85, 90, 100 };
    int n = sizeof(arr) / sizeof(arr[0]);
    int x = 100;
    int index = fibonacciSearch(arr, x, n);
    if (index == -1)
        cout << "Element not found";
    else
        cout << "Element found at index " << index;
    return 0;
}

